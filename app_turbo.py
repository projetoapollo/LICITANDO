# app_turbo.py
import os
import streamlit as st

# ==============================
# CONFIGURA√á√ïES INICIAIS
# ==============================
st.set_page_config(
    page_title="Appolari Turbo IA",
    layout="centered",
    page_icon="üß†",
)

st.title("üõ†Ô∏è Sistema Appolari Turbo V3.2")
st.success("Aplica√ß√£o carregada com sucesso! ‚úÖ")

# ==============================
# IMPORTA√á√ÉO DO M√ìDULO PRINCIPAL
# ==============================
processamento_disponivel = False
processar_pdf = None

try:
    # O script_principal_turbo.py precisa estar no mesmo reposit√≥rio
    from script_principal_turbo import processar_pdf  # type: ignore
    processamento_disponivel = True
except Exception as e:
    processamento_disponivel = False
    st.warning("‚ö†Ô∏è M√≥dulo principal n√£o encontrado no servidor Render.")
    with st.expander("Detalhe t√©cnico (para depura√ß√£o)"):
        st.code(repr(e), language="python")

st.divider()

# ==============================
# INTERFACE PRINCIPAL
# ==============================
uploaded_file = st.file_uploader(
    "üìÑ Envie o PDF de cota√ß√£o",
    type=["pdf"],
    help="Envie o arquivo PDF que cont√©m a cota√ß√£o para processarmos.",
)

if uploaded_file is not None:
    st.success("‚úÖ PDF carregado com sucesso!")

    if not processamento_disponivel:
        st.error("O m√≥dulo `script_principal_turbo.py` n√£o p√¥de ser carregado nesta inst√¢ncia Render.")
        st.info("Verifique se o arquivo existe no reposit√≥rio e se o import est√° correto.")
    else:
        # S√≥ mostra o bot√£o quando podemos de fato processar
        if st.button("‚ñ∂Ô∏è Rodar Sistema Appolari"):
            try:
                with st.spinner("‚è≥ Processando... aguarde alguns instantes..."):
                    # Espera-se que processar_pdf(retorne) (df, output_excel_bytes) OU (df, path_arquivo)
                    saida = processar_pdf(uploaded_file)

                # Normaliza a sa√≠da para suportar diferentes formatos
                df = None
                output_data = None
                output_name = "cotacao_final.xlsx"

                if isinstance(saida, tuple) and len(saida) >= 2:
                    df, output = saida[0], saida[1]
                    # Caso o segundo item seja bytes ou caminho de arquivo
                    if isinstance(output, (bytes, bytearray)):
                        output_data = output
                    elif isinstance(output, str) and os.path.exists(output):
                        # L√™ o arquivo como bytes
                        with open(output, "rb") as fh:
                            output_data = fh.read()
                        # Tenta usar o nome do arquivo real
                        output_name = os.path.basename(output) or output_name
                    else:
                        # Se for outro tipo qualquer, tenta converter para bytes se poss√≠vel
                        try:
                            output_data = bytes(output)
                        except Exception:
                            output_data = None
                else:
                    # Se a fun√ß√£o devolver apenas bytes/arquivo
                    if isinstance(saida, (bytes, bytearray)):
                        output_data = saida
                    elif isinstance(saida, str) and os.path.exists(saida):
                        with open(saida, "rb") as fh:
                            output_data = fh.read()
                        output_name = os.path.basename(saida) or output_name

                st.success("‚úÖ Processamento conclu√≠do com sucesso!")

                if df is not None:
                    st.dataframe(df, use_container_width=True)

                if output_data:
                    st.download_button(
                        "‚¨áÔ∏è Baixar planilha gerada",
                        data=output_data,
                        file_name=output_name,
                        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                    )
                else:
                    st.info(
                        "O processamento terminou, mas n√£o recebi um conte√∫do de planilha para download. "
                        "Confira a fun√ß√£o `processar_pdf` para garantir que ela retorne os bytes do Excel ou o caminho do arquivo."
                    )

            except Exception as e:
                st.error("‚ùå Erro ao processar.")
                with st.expander("Ver detalhes do erro"):
                    st.code(repr(e), language="python")

else:
    st.info("üì• Envie um arquivo PDF para come√ßar.")

st.divider()
st.caption("Desenvolvido por Pai Appolari e Filho Coop üíö")
